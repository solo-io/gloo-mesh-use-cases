##################################################
# Test Name: Subset Destination Routing (TODO cluster routing not supported)
# Test Number: 5.6
# API Version: 2
# Test Description:
#   - Route to an application subset based on version label
# Issues
# - https://github.com/solo-io/gloo-mesh-enterprise/issues/2077
##################################################
# apiVersion: networking.mesh.gloo.solo.io/v1
# kind: VirtualMesh
# metadata:
#   name: virtual-mesh
#   namespace: gloo-mesh
# spec:
#   mtlsConfig:
#     autoRestartPods: true                # automatically restart pods when ca certificate rotated (NOT recommended for production!!)
#     shared:
#       rootCertificateAuthority:          # auto generate ca certificates for each istio mesh
#         generated: {}
#   federation:                            # Enable automatic federation of all services to all clusters
#     selectors:
#       - {}
#   meshes:
#     - name: istiod-istio-system-cluster-1
#       namespace: gloo-mesh
#     - name: istiod-istio-system-cluster-2
#       namespace: gloo-mesh
# ---
# apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
# kind: VirtualGateway
# metadata:
#   name: ingress
#   namespace: gloo-mesh
# spec:
#   ingressGatewaySelectors:
#   - portName: http2                      # match on port name http2
#     destinationSelectors:
#     - kubeServiceMatcher:
#         labels:
#           istio: ingressgateway          # select all gateways with istio=ingressgateway label
#         namespaces:
#         - istio-system                   # only include istio-system namespace
#   connectionHandlers:
#   - http:
#       routeConfig:
#       - virtualHost:
#           domains:
#           - "*"
#           routes:
#           - matchers:                    # match on path prefix /v1/frontend
#             - uri:
#                 prefix: /v1/frontend
#             name: frontend
#             routeAction:
#               destinations:
#               - kubeService:
#                   clusterName: cluster-1
#                   name: frontend
#                   namespace: app
#                   port: 8080
#                   subset:
#                     - version: v1
#           - matchers:                    # match on path prefix /v2/frontend
#             - uri:
#                 prefix: /v2/frontend
#             name: frontend
#             routeAction:
#               destinations:
#               - kubeService:
#                   clusterName: cluster-1
#                   name: frontend
#                   namespace: app
#                   port: 8080
#                   subset:
#                     - version: v2