##################################################
# Test Name: Namespace Based Delegation (TODO Not Supported)
# Test Number: 8.1
# API Version: 2
# Test Description:
#   - Delegate cluster-1.solo.io to cluster-1 RouteTable
#   - Delegate cluster-2.solo.io to cluster-2 RouteTable
# Issues
# - https://github.com/solo-io/gloo-mesh-enterprise/issues/2085
##################################################
apiVersion: admin.gloo.solo.io/v2
kind: RootTrustPolicy
metadata:
  name: auto-mtls
  namespace: gloo-mesh
spec:
  applyToMeshes:
    - name: istiod-istio-system-cluster-1
      namespace: gloo-mesh
    - name: istiod-istio-system-cluster-2
      namespace: gloo-mesh
  config:
    rootCertificateAuthority:            # auto generate ca certificates for each istio mesh
      generated:  {}
---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: admin                           # workspace for admin config
  namespace: gloo-mesh
spec:
  workloadClusters:
   - selector:
      namespaces:
        - name: istio-system
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: admin-settings
  namespace: admin                       # workspace settings must exist in workspace namespace
spec:
 imports:                                # import setting from cluster-1 and cluster-2 
 - name: cluster-1
 - name: cluster-2
 exportTo:                               # export to cluster-1 cluster-2 so they can use ingressgateway
 - name: cluster-1
 - name: cluster-2
---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: cluster-1                        # workspace for cluster-1 config
  namespace: gloo-mesh
spec:
  workloadClusters:
   - name: cluster-1
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: cluster-1-settings
  namespace: cluster-1                   # workspace settings must exist in workspace namespace
spec:
 exportTo:                               # export to admin workspace
 - name: admin
---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: cluster-2                        # workspace for cluster-2 config
  namespace: gloo-mesh
spec:
  workloadClusters:
   - name: cluster-2
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: cluster-2-settings
  namespace: cluster-2                   # workspace settings must exist in workspace namespace
spec:
 exportTo:                               # export to admin workspace
 - name: admin
---
apiVersion: networking.gloo.solo.io/v2   # virtual gateway owned by admin workspace
kind: VirtualGateway
metadata:
  name: ingress                          # applies to all gateways in the mesh 
  namespace: admin
spec:
  listeners:
    - port:
        name: http2                      # apply configuration to ingress gateways http port
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: cluster-1-routes
  namespace: admin
spec:
  hosts:
    - 'cluster-1.solo.io'
  virtualGateways:
    - name: ingress
  http:
  - name: cluster-1-routes
    delegate:                            # delegate cluster-1.solo.io to route tables with label cluster=cluster-1
      routeTables:
      - selector:
          cluster: cluster-1
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: cluster-2-routes
  namespace: admin
spec:
  hosts:
    - 'cluster-2.solo.io'
  virtualGateways:
    - name: ingress
  http:
  - name: cluster-2-routes
    delegate:                            # delegate cluster-2.solo.io to route tables with label cluster=cluster-2
      routeTables:
      - selector:
          cluster: cluster-2
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: frontend
  namespace: cluster-1
  labels:
    cluster: cluster-1
spec:
  hosts:
    - 'cluster-1.solo.io'
  virtualGateways:
    - name: ingress
      workspace: admin
  http:
  - name: frontend
    forwardTo:
      destinations:
      - name: frontend
        namespace: app
        port:
          number: 8080
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: frontend
  namespace: cluster-2
  labels:
    cluster: cluster-2
spec:
  hosts:
    - 'cluster-2.solo.io'
  virtualGateways:
    - name: ingress
      workspace: admin
  http:
  - name: frontend
    forwardTo:
      destinations:
      - name: frontend
        namespace: app
        port:
          number: 8080