##################################################
# Test Name: Modify Response Code
# Test Number: 6.4
# API Version: 2
# Test Description:
#   - Rewrite one.solo.io to another.solo.io using 302 status code
##################################################
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: global                           # workspace contains all connected services
  namespace: gloo-mesh
spec:
  workloadClusters:                      # select all clusters and namespaces
    - name: "*"
---
apiVersion: admin.gloo.solo.io/v2
kind: RootTrustPolicy
metadata:
  name: auto-mtls
  namespace: gloo-mesh
spec:
  applyToMeshes:
    - name: istiod-istio-system-cluster1
      namespace: gloo-mesh
    - name: istiod-istio-system-cluster2
      namespace: gloo-mesh
  config:
    rootCertificateAuthority:            # auto generate ca certificates for each istio mesh
      generated:  {}
---
apiVersion: networking.gloo.solo.io/v2
kind: VirtualGateway
metadata:
  name: ingress                          # applies to all gateways in the mesh 
  namespace: global
spec:
  listeners:
    - port:
        name: http2                      # apply configuration to ingress gateways http port
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: redirect
  namespace: global
spec:
  hosts:
    - 'one.solo.io'
  virtualGateways:
    - name: ingress
  http:
  - name: redirect
    redirect:
      hostRedirect: another.solo.io
      responseCode: TEMPORARY_REDIRECT
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: frontend
  namespace: global
spec:
  hosts:
    - 'another.solo.io'
  virtualGateways:
    - name: ingress
  http:
  - name: frontend
    forwardTo:
      destinations:
      - name: frontend
        namespace: app
        port:
          number: 8080
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: VirtualGateway
metadata:
  name: ingress
  namespace: gloo-mesh
spec:
  ingressGatewaySelectors:
  - portName: http2               # match on port name http2
    destinationSelectors:
    - kubeServiceMatcher:
        labels:
          istio: ingressgateway  # select all gateways with istio=ingressgateway label
        namespaces:
        - istio-system            # only include istio-system namespace
  connectionHandlers:
  - http:
      - virtualHost:
          domains:
          - "one.solo.io"
          routes:
          - name: frontend
            redirectAction:
              hostRedirect: another.solo.io
              responseCode: 302