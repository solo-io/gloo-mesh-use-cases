##################################################
# Test Name: Weighted Route Selection
# Test Number: 8.3
# API Version: 2
# Test Description:
#   - Two RouteTables specify prefix routes
#   - Use RouteTable weights to specify frontend-2 gets priority
##################################################
apiVersion: admin.gloo.solo.io/v2
kind: RootTrustPolicy
metadata:
  name: auto-mtls
  namespace: gloo-mesh
spec:
  applyToMeshes:
    - name: istiod-istio-system-cluster1
      namespace: gloo-mesh
    - name: istiod-istio-system-cluster2
      namespace: gloo-mesh
  config:
    rootCertificateAuthority:            # auto generate ca certificates for each istio mesh
      generated:  {}
---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: admin                           # workspace for admin config
  namespace: gloo-mesh
spec:
  workloadClusters:
   - selector:
      namespaces:
        - name: istio-system
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: admin-settings
  namespace: admin                       # workspace settings must exist in workspace namespace
spec:
 imports:                                # import setting from cluster1
 - name: cluster1
 exportTo:                               # export to cluster1 it can use ingressgateway
 - name: cluster1
---
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: cluster1                        # workspace for cluster1 config
  namespace: gloo-mesh
spec:
  workloadClusters:
   - name: cluster1
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: cluster1-settings
  namespace: cluster1                   # workspace settings must exist in workspace namespace
spec:
 exportTo:                               # export to admin workspace
 - name: admin
---
apiVersion: networking.gloo.solo.io/v2   # virtual gateway owned by admin workspace
kind: VirtualGateway
metadata:
  name: ingress                          # applies to all gateways in the mesh 
  namespace: admin
spec:
  listeners:
    - port:
        name: http2                      # apply configuration to ingress gateways http port
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: ignress-routes
  namespace: admin
spec:
  hosts:
    - 'frontend.solo.io'
  virtualGateways:
    - name: ingress
  http:
  - name: cluster1-routes
    delegate:                            # delegate frontend.solo.io to route tables with label gateway=ingress
      sortMethod: TABLE_WEIGHT
      routeTables:
      - selector:
          gateway: ingress
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: frontend
  namespace: cluster1
  labels:
    gateway: ingress
spec:
  weight: 50
  hosts:
    - 'frontend.solo.io'
  virtualGateways:
    - name: ingress
      workspace: admin
  http:
  - name: frontend
    matchers:
    - name: frontend
      uri:
        prefix: /frontend
    forwardTo:
      destinations:
      - name: frontend
        namespace: app
        port:
          number: 8080
---
apiVersion: networking.gloo.solo.io/v2
kind: RouteTable
metadata:
  name: frontend
  namespace: cluster1
  labels:
    gateway: ingress
spec:
  weight: 100
  hosts:
    - 'frontend.solo.io'
  virtualGateways:
    - name: ingress
      workspace: admin
  http:
  - name: frontend
    matchers:
    - name: frontend
      uri:
        prefix: /frontend/cluster2
    forwardTo:
      destinations:
      - name: frontend
        namespace: app
        port:
          number: 8080