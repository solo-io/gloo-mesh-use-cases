##################################################
# Test Name: Label Selector Based Route Selection
# Test Number: 8.2
# Test Description:
#   - Delegate cluster1.solo.io to cluster1 RouteTable
#   - Delegate cluster2.solo.io to cluster2 RouteTable
##################################################
apiVersion: networking.mesh.gloo.solo.io/v1
kind: VirtualMesh
metadata:
  name: virtual-mesh
  namespace: gloo-mesh
spec:
  federation:                            # Enable automatic federation of all services to all clusters
    selectors:
      - {}
  meshes:
    - name: istiod-istio-system-cluster1
      namespace: gloo-mesh
    - name: istiod-istio-system-cluster2
      namespace: gloo-mesh
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: VirtualGateway
metadata:
  name: ingress
  namespace: gloo-mesh
spec:
  ingressGatewaySelectors:
  - portName: http2                      # match on port name http2
    destinationSelectors:
    - kubeServiceMatcher:
        labels:
          istio: ingressgateway          # select all gateways with istio=ingressgateway label
        namespaces:
        - istio-system                   # only include istio-system namespace
  connectionHandlers:
  - http:
      routeConfig:
      - virtualHostSelector:             # select VirtualHost based on label gateway: ingress in the gloo-mesh namespace
          labels:
            gateway: ingress
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: VirtualHost
metadata:
  name: cluster1
  namespace: gloo-mesh
  labels:
    gateway: ingress
spec:
  domains:
  - cluster1.solo.io
  routes:
  - delegateAction:                      # domain cluster1.solo.io applies to RouteTables with the label cluster=cluster1 in the gloo-mesh namespace
      selector:
        labels:
          cluster: cluster1
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: VirtualHost
metadata:
  name: cluster2
  namespace: gloo-mesh
  labels:
    gateway: ingress
spec:
  domains:
  - cluster2.solo.io
  routes:
  - delegateAction:                      # domain cluster1.solo.io applies to RouteTables with the label cluster=cluster2 in the gloo-mesh namespace
      selector:
        labels:
          cluster: cluster2
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: RouteTable
metadata:
  name: frontend-cluster1
  namespace: gloo-mesh                   # matches the namespace selector in cluster1 VirtualHost
  labels:
    cluster: cluster1                   # matches the label selector in cluster1 VirtualHost
spec:
  routes:
  - matchers:
    - uri:
        prefix: /frontend                # only match on cluster1.solo.io/frontend
    name: frontend
    routeAction:
      destinations:
      - kubeService:                     # route requests to cluster1 frontend application
          clusterName: cluster1
          name: frontend
          namespace: app
          port: 8080
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: RouteTable
metadata:
  name: frontend-cluster2
  namespace: gloo-mesh                   # matches the namespace selector in cluster2 VirtualHost
  labels:
    cluster: cluster2                   # matches the label selector in cluster2 VirtualHost
spec:
  routes:
  - matchers:
    - uri:
        prefix: /frontend                # only match on cluster2.solo.io/frontend
    name: frontend
    routeAction:
      destinations:
      - kubeService:                     # route requests to cluster2 frontend application
          clusterName: cluster2
          name: frontend
          namespace: app
          port: 8080