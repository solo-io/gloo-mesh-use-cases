##################################################
# Test Name: Header Regex Value Match
# Test Number: 4.2.3
# Test Description:
#   - Route X-frontend-app header value cluster1 to cluster1 frontend
#   - Route X-frontend-app header value cluster-* to cluster2 frontend
##################################################
apiVersion: networking.mesh.gloo.solo.io/v1
kind: VirtualMesh
metadata:
  name: virtual-mesh
  namespace: gloo-mesh
spec:
  federation:                            # Enable automatic federation of all services to all clusters
    selectors:
      - {}
  meshes:
    - name: istiod-istio-system-cluster1
      namespace: gloo-mesh
    - name: istiod-istio-system-cluster2
      namespace: gloo-mesh
---
apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
kind: VirtualGateway
metadata:
  name: ingress
  namespace: gloo-mesh
spec:
  ingressGatewaySelectors:
  - portName: http2                      # match on port name http2
    destinationSelectors:
    - kubeServiceMatcher:
        labels:
          istio: ingressgateway          # select all gateways with istio=ingressgateway label
        namespaces:
        - istio-system                   # only include istio-system namespace
  connectionHandlers:
  - http:
      routeConfig:
      - virtualHost:
          domains:
          - "api.solo.io"
          routes:
          - matchers:                    # route to specific cluster
            - headers:
              - name: X-frontend-app
                value: cluster1
            name: frontend-cluster1
            routeAction:
              destinations:
              - kubeService:
                  clusterName: cluster1
                  name: frontend
                  namespace: app
                  port: 8080
          - matchers:                    # anything other than cluster1 be routed to cluster2
            - headers:
              - name: X-frontend-app
                value: cluster-.*
                regex: true              # enable regex support
            name: frontend-cluster2
            routeAction:
              destinations:
              - kubeService:
                  clusterName: cluster2
                  name: frontend
                  namespace: app
                  port: 8080