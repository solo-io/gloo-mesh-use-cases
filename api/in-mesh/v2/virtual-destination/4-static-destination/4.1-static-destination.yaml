##################################################
# Test Name: Virtual Destination Static Destination
# Test Number: 4.1
# Test Description:
#   - Select specific gloo mesh destinations for failover
# Issues
# - https://github.com/solo-io/gloo-mesh-enterprise/issues/3028
##################################################
apiVersion: admin.gloo.solo.io/v2
kind: Workspace
metadata:
  name: global                           # workspace contains all connected services
  namespace: gloo-mesh
spec:
  workloadClusters:                      # select all clusters and namespaces
  - name: "*"
    namespaces:
    - name: "*"
---
apiVersion: admin.gloo.solo.io/v2
kind: WorkspaceSettings
metadata:
  name: settings
  namespace: global
spec:
 {}
---
apiVersion: networking.gloo.solo.io/v2
kind: VirtualDestination
metadata:
  name: frontend
  namespace: global
spec:
  hosts:
    - frontend.solo.io
  selectors:
    labels:
      app: frontend
    cluster: cluster-2
  ports:
  - name: http
---
#apiVersion: networking.enterprise.mesh.gloo.solo.io/v1beta1
#kind: VirtualDestination
#metadata:
#  name: frontend
#  namespace: gloo-mesh
#spec:
#  hostname: frontend.solo.internal       # in mesh services can reach frontend by this hostname
#  port:
#    number: 8090                         # matches frontend port
#    protocol: http
#    targetNumber: 8090                   # matches frontend service port
#  static:
#    destinations:                        # settings failover order explicitly, all traffic to cluster-1 first and cluster-2 secondary
#      - kubeService:
#          name: frontend
#          namespace: {{.EchoContext.AppNamespace.Name}}
#          clusterName: cluster-1
#      - kubeService:
#          name: frontend
#          namespace: {{.EchoContext.AppNamespace.Name}}
#          clusterName: cluster-2
#  localized:
#    outlierDetection:                    # remove frontend for 1m when 5 conseucutive errors over 30s
#      consecutiveErrors: 5
#      interval: 10s
#      baseEjectionTime: 10s
#      maxEjectionPercent: 100
#  virtualMesh:                           # apply to virtual-mesh
#    name: virtual-mesh
#    namespace: gloo-mesh